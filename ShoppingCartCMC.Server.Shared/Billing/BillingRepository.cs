using Microsoft.Extensions.Logging;
using ShoppingCartCMC.Server.Shared.Common;
using ShoppingCartCMC.Shared.DTO;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ShoppingCartCMC.Server.Shared.Billing
{
    public class BillingRepository : iBillingRepository
    {
        private readonly ILogger<BillingRepository> _logger;

        /// <summary>
        /// Dependency injection
        /// </summary>
        /// <param name="logger"></param>
        public BillingRepository(ILogger<BillingRepository> logger)
        {
            _logger = logger;
        }


        /// <summary>
        /// place order
        /// </summary>
        /// <param name="billingDto">a BillingDto object for waiting for processing</param>
        /// <returns>order number generated by server</returns>
        public async Task<int> PlaceOrder(BillingDto billingDto)
        {
            /** *
            * Patrick: [todo in future].
            * validae billing first, persist into db, generate billing receipt 
            */

            ValidateOrder(billingDto);
            return 12345; //PW: dummy order number
        }



        /// <summary>
        /// validate order
        /// </summary>
        /// <param name="billing"></param>
        /// <returns>error code, e.g., 0 means success</returns>
        private int ValidateOrder(BillingDto billing)
        {
            /** *
            * Patrick: [todo in future].
            */

            //PW: (1)validate product price as they may out-of-date, may be hacked
            //PW: (2)validate exchange rate    
            //PW: (3)validate shipping fee    
            //PW: (4)validate subTotal 
            //PW: (5)validate total 
            //PW: (6)validate user

            return ErrorCode.SUCCESS;

        }

    }
}
